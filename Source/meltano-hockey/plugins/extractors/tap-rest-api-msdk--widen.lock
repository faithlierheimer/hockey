{
  "plugin_type": "extractors",
  "name": "tap-rest-api-msdk",
  "namespace": "tap_rest_api_msdk",
  "variant": "widen",
  "label": "REST API",
  "docs": "https://hub.meltano.com/extractors/tap-rest-api-msdk--widen",
  "repo": "https://github.com/Widen/tap-rest-api-msdk",
  "pip_url": "tap-rest-api-msdk",
  "description": "REST API",
  "logo_url": "https://hub.meltano.com/assets/logos/extractors/restapi.png",
  "capabilities": [
    "catalog",
    "state",
    "discover",
    "about",
    "stream-maps",
    "schema-flattening"
  ],
  "settings_group_validation": [
    [
      "api_url",
      "streams"
    ]
  ],
  "settings": [
    {
      "name": "api_url",
      "kind": "string",
      "label": "API URL",
      "description": "the base url/endpoint for the desired api"
    },
    {
      "name": "next_page_token_path",
      "kind": "password",
      "label": "Next Page Token Path",
      "description": "a jsonpath string representing the path to the 'next page' token. Defaults to `$.next_page`"
    },
    {
      "name": "pagination_request_style",
      "kind": "string",
      "label": "Pagination Request Style",
      "description": "the pagination style to use for requests. Defaults to `default`"
    },
    {
      "name": "pagination_response_style",
      "kind": "string",
      "label": "Pagination Response Style",
      "description": "the pagination style to use for response. Defaults to `default`"
    },
    {
      "name": "pagination_page_size",
      "kind": "integer",
      "label": "Pagination Page Size",
      "description": "the size of each page in records. Defaults to None"
    },
    {
      "name": "path",
      "kind": "string",
      "label": "Path",
      "description": "the path appended to the `api_url`. Stream-level path will overwrite top-level path"
    },
    {
      "name": "params",
      "kind": "object",
      "label": "Params",
      "description": "an object providing the `params` in a `requests.get` method. Stream level params will be mergedwith top-level params with stream level params overwritingtop-level params with the same key."
    },
    {
      "name": "headers",
      "kind": "object",
      "label": "Headers",
      "description": "An object of headers to pass into the api calls. Stream levelheaders will be merged with top-level params with streamlevel params overwriting top-level params with the same key"
    },
    {
      "name": "records_path",
      "kind": "string",
      "label": "Records Path",
      "description": "a jsonpath string representing the path in the requests response that contains the records to process. Defaults to `$[*]`. Stream level records_path will overwrite the top-level records_path"
    },
    {
      "name": "primary_keys",
      "kind": "array",
      "label": "Primary Keys",
      "description": "a list of the json keys of the primary key for the stream."
    },
    {
      "name": "replication_key",
      "kind": "password",
      "label": "Replication Key",
      "description": "the json key of the replication key. Note that this should be an incrementing integer or datetime object."
    },
    {
      "name": "except_keys",
      "kind": "array",
      "label": "Except Keys",
      "description": "This tap automatically flattens the entire json structure and builds keys based on the corresponding paths.; Keys, whether composite or otherwise, listed in this dictionary will not be recursively flattened, but instead their values will be; turned into a json string and processed in that format. This is also automatically done for any lists within the records; therefore, records are not duplicated for each item in lists."
    },
    {
      "name": "num_inference_records",
      "kind": "integer",
      "label": "Num Inference Records",
      "description": "number of records used to infer the stream's schema. Defaults to 50."
    },
    {
      "name": "streams",
      "kind": "array",
      "label": "Streams",
      "description": "An array of streams, designed for separate paths using thesame base url.\n\nStream level config options.\n\nParameters that appear at the stream-level will overwrite their top-level counterparts except where noted below:\n\n- name: required: name of the stream.\n- path: optional: the path appended to the api_url.\n- params: optional: an object of objects that provide the params in a requests.get method. Stream level params will be merged with top-level params with stream level params overwriting top-level params with the same key.\n- headers: optional: an object of headers to pass into the api calls. Stream level headers will be merged with top-level params with stream level params overwriting top-level params with the same key\n- records_path: optional: a jsonpath string representing the path in the requests response that contains the records to process. Defaults to $[*].\n- primary_keys: required: a list of the json keys of the primary key for the stream.\n- replication_key: optional: the json key of the replication key. Note that this should be an incrementing integer or datetime object.\n- except_keys: This tap automatically flattens the entire json structure and builds keys based on the corresponding paths. Keys, whether composite or otherwise, listed in this dictionary will not be recursively flattened, but instead their values will be turned into a json string and processed in that format. This is also automatically done for any lists within the records; therefore, records are not duplicated for each item in lists.\n- num_inference_keys: optional: number of records used to infer the stream's schema. Defaults to 50.\n- schema: optional: A valid Singer schema or a path-like string that provides the path to a .json file that contains a valid Singer schema. If provided, the schema will not be inferred from the results of an api call.\n"
    },
    {
      "name": "stream_maps",
      "kind": "object",
      "label": "Stream Maps",
      "description": "Config object for stream maps capability."
    },
    {
      "name": "stream_map_config",
      "kind": "object",
      "label": "Stream Map Config",
      "description": "User-defined config values to be used within map expressions."
    },
    {
      "name": "flattening_enabled",
      "kind": "boolean",
      "label": "Flattening Enabled",
      "description": "'True' to enable schema flattening and automatically expand nested properties."
    },
    {
      "name": "flattening_max_depth",
      "kind": "integer",
      "label": "Flattening Max Depth",
      "description": "The max depth to flatten schemas."
    }
  ]
}